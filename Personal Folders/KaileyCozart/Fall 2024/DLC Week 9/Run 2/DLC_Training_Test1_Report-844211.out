---------------------------------------
Begin Slurm Prolog: Oct-17-2024 00:27:23
Job ID:    844211
User ID:   kcozart6
Account:   coc
Job name:  DLC_model_training
Partition: ice-gpu
---------------------------------------

CondaError: Run 'conda init' before 'conda activate'

Training with configuration:
data:
  colormode: RGB
  inference:
    normalize_images: True
  train:
    affine:
      p: 0.5
      rotation: 30
      scaling: [1.0, 1.0]
      translation: 0
    collate:
      type: ResizeFromDataSizeCollate
      min_scale: 0.4
      max_scale: 1.0
      min_short_side: 128
      max_short_side: 1152
      multiple_of: 32
      to_square: False
    covering: False
    gaussian_noise: 12.75
    hist_eq: False
    motion_blur: False
    normalize_images: True
device: auto
metadata:
  project_path: /storage/ice1/0/3/kcozart6/dlc_model-student-2023-07-26
  pose_config_path: /storage/ice1/0/3/kcozart6/dlc_model-student-2023-07-26/dlc-models-pytorch/iteration-0/dlc_modelJul26-trainset95shuffle1/train/pose_cfg.yaml
  bodyparts: ['nose', 'lefteye', 'righteye', 'spine1', 'spine2', 'spine3', 'backfin', 'leftfin', 'rightfin']
  unique_bodyparts: []
  individuals: ['fish1', 'fish2', 'fish3', 'fish4', 'fish5', 'fish6', 'fish7', 'fish8', 'fish9', 'fish10']
  with_identity: False
method: bu
model:
  backbone:
    type: ResNet
    model_name: resnet50_gn
    output_stride: 16
    freeze_bn_stats: True
    freeze_bn_weights: False
  backbone_output_channels: 2048
  heads:
    bodypart:
      type: DLCRNetHead
      predictor:
        type: PartAffinityFieldPredictor
        num_animals: 10
        num_multibodyparts: 9
        num_uniquebodyparts: 0
        nms_radius: 5
        sigma: 1.0
        locref_stdev: 7.2801
        min_affinity: 0.05
        graph: [[0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [0, 8], [1, 2], [1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [2, 3], [2, 4], [2, 5], [2, 6], [2, 7], [2, 8], [3, 4], [3, 5], [3, 6], [3, 7], [3, 8], [4, 5], [4, 6], [4, 7], [4, 8], [5, 6], [5, 7], [5, 8], [6, 7], [6, 8], [7, 8]]
        edges_to_keep: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35]
        apply_sigmoid: True
        clip_scores: False
      target_generator:
        type: SequentialGenerator
        generators: [{'type': 'HeatmapPlateauGenerator', 'num_heatmaps': 9, 'pos_dist_thresh': 17, 'heatmap_mode': 'KEYPOINT', 'gradient_masking': False, 'generate_locref': True, 'locref_std': 7.2801}, {'type': 'PartAffinityFieldGenerator', 'graph': [[0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [0, 8], [1, 2], [1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [2, 3], [2, 4], [2, 5], [2, 6], [2, 7], [2, 8], [3, 4], [3, 5], [3, 6], [3, 7], [3, 8], [4, 5], [4, 6], [4, 7], [4, 8], [5, 6], [5, 7], [5, 8], [6, 7], [6, 8], [7, 8]], 'width': 20}]
      criterion:
        heatmap:
          type: WeightedBCECriterion
          weight: 1.0
        locref:
          type: WeightedHuberCriterion
          weight: 0.05
        paf:
          type: WeightedHuberCriterion
          weight: 0.1
      heatmap_config:
        channels: [2048, 9]
        kernel_size: [3]
        strides: [2]
      locref_config:
        channels: [2048, 18]
        kernel_size: [3]
        strides: [2]
      paf_config:
        channels: [2048, 72]
        kernel_size: [3]
        strides: [2]
      num_stages: 5
net_type: resnet_50
runner:
  type: PoseTrainingRunner
  gpus: None
  key_metric: test.mAP
  key_metric_asc: True
  eval_interval: 300
  optimizer:
    type: AdamW
    params:
      lr: 0.0001
  scheduler:
    type: LRListScheduler
    params:
      lr_list: [[1e-05], [1e-06]]
      milestones: [160, 190]
  snapshots:
    max_snapshots: 5
    save_epochs: 25
    save_optimizer_state: False
train_settings:
  batch_size: 4
  dataloader_workers: 0
  dataloader_pin_memory: False
  display_iters: 500
  epochs: 90
  seed: 42
Loading pretrained weights from Hugging Face hub (timm/resnet50_gn.a1h_in1k)
[timm/resnet50_gn.a1h_in1k] Safe alternative available for 'pytorch_model.bin' (as 'model.safetensors'). Loading weights using safetensors.
Data Transforms:
  Training:   Compose([
  Affine(always_apply=False, p=0.5, interpolation=1, mask_interpolation=0, cval=0, mode=0, scale={'x': (1.0, 1.0), 'y': (1.0, 1.0)}, translate_percent=None, translate_px={'x': (0, 0), 'y': (0, 0)}, rotate=(-30, 30), fit_output=False, shear={'x': (0.0, 0.0), 'y': (0.0, 0.0)}, cval_mask=0, keep_ratio=True, rotate_method='largest_box'),
  GaussNoise(always_apply=False, p=0.5, var_limit=(0, 162.5625), per_channel=True, mean=0),
  Normalize(always_apply=False, p=1.0, mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225], max_pixel_value=255.0),
], p=1.0, bbox_params={'format': 'coco', 'label_fields': ['bbox_labels'], 'min_area': 0.0, 'min_visibility': 0.0, 'min_width': 0.0, 'min_height': 0.0, 'check_each_transform': True}, keypoint_params={'format': 'xy', 'label_fields': ['class_labels'], 'remove_invisible': False, 'angle_in_degrees': True, 'check_each_transform': True}, additional_targets={}, is_check_shapes=True)
  Validation: Compose([
  Normalize(always_apply=False, p=1.0, mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225], max_pixel_value=255.0),
], p=1.0, bbox_params={'format': 'coco', 'label_fields': ['bbox_labels'], 'min_area': 0.0, 'min_visibility': 0.0, 'min_width': 0.0, 'min_height': 0.0, 'check_each_transform': True}, keypoint_params={'format': 'xy', 'label_fields': ['class_labels'], 'remove_invisible': False, 'angle_in_degrees': True, 'check_each_transform': True}, additional_targets={}, is_check_shapes=True)
Using custom collate function: {'type': 'ResizeFromDataSizeCollate', 'min_scale': 0.4, 'max_scale': 1.0, 'min_short_side': 128, 'max_short_side': 1152, 'multiple_of': 32, 'to_square': False}

Note: According to your model configuration, you're training with batch size 1 and/or ``freeze_bn_stats=false``. This is not an optimal setting if you have powerful GPUs.
This is good for small batch sizes (e.g., when training on a CPU), where you should keep ``freeze_bn_stats=true``.
If you're using a GPU to train, you can obtain faster performance by setting a larger batch size (the biggest power of 2 where you don't geta CUDA out-of-memory error, such as 8, 16, 32 or 64 depending on the model, size of your images, and GPU memory) and ``freeze_bn_stats=false`` for the backbone of your model. 
This also allows you to increase the learning rate (empirically you can scale the learning rate by sqrt(batch_size) times).

Using 1472 images and 78 for testing

Starting pose model training...
--------------------------------------------------
Epoch 1/90 (lr=0.0001), train loss 0.00899
Epoch 2/90 (lr=0.0001), train loss 0.00508
Epoch 3/90 (lr=0.0001), train loss 0.00362
Epoch 4/90 (lr=0.0001), train loss 0.00327
Epoch 5/90 (lr=0.0001), train loss 0.00256
Epoch 6/90 (lr=0.0001), train loss 0.00297
Epoch 7/90 (lr=0.0001), train loss 0.00246
Epoch 8/90 (lr=0.0001), train loss 0.00261
Epoch 9/90 (lr=0.0001), train loss 0.00248
Epoch 10/90 (lr=0.0001), train loss 0.00551
Epoch 11/90 (lr=0.0001), train loss 0.00780
Epoch 12/90 (lr=0.0001), train loss 0.00356
Epoch 13/90 (lr=0.0001), train loss 0.00321
Epoch 14/90 (lr=0.0001), train loss 0.00278
Epoch 15/90 (lr=0.0001), train loss 0.00241
Epoch 16/90 (lr=0.0001), train loss 0.00219
Epoch 17/90 (lr=0.0001), train loss 0.00225
Epoch 18/90 (lr=0.0001), train loss 0.00226
Epoch 19/90 (lr=0.0001), train loss 0.00513
Epoch 20/90 (lr=0.0001), train loss 0.00380
Epoch 21/90 (lr=0.0001), train loss 0.00304
Epoch 22/90 (lr=0.0001), train loss 0.00287
Epoch 23/90 (lr=0.0001), train loss 0.00245
Epoch 24/90 (lr=0.0001), train loss 0.00370
Epoch 25/90 (lr=0.0001), train loss 0.00230
Epoch 26/90 (lr=0.0001), train loss 0.00236
Epoch 27/90 (lr=0.0001), train loss 0.00200
Epoch 28/90 (lr=0.0001), train loss 0.00211
Epoch 29/90 (lr=0.0001), train loss 0.00229
Epoch 30/90 (lr=0.0001), train loss 0.00205
Epoch 31/90 (lr=0.0001), train loss 0.00177
Epoch 32/90 (lr=0.0001), train loss 0.00307
Epoch 33/90 (lr=0.0001), train loss 0.00266
Epoch 34/90 (lr=0.0001), train loss 0.00222
Epoch 35/90 (lr=0.0001), train loss 0.00209
Epoch 36/90 (lr=0.0001), train loss 0.00191
Epoch 37/90 (lr=0.0001), train loss 0.00261
Epoch 38/90 (lr=0.0001), train loss 0.00197
Epoch 39/90 (lr=0.0001), train loss 0.00181
Epoch 40/90 (lr=0.0001), train loss 0.00173
Epoch 41/90 (lr=0.0001), train loss 0.00164
Epoch 42/90 (lr=0.0001), train loss 0.00171
Epoch 43/90 (lr=0.0001), train loss 0.00168
Epoch 44/90 (lr=0.0001), train loss 0.00161
Epoch 45/90 (lr=0.0001), train loss 0.00171
Epoch 46/90 (lr=0.0001), train loss 0.00171
Epoch 47/90 (lr=0.0001), train loss 0.00157
Epoch 48/90 (lr=0.0001), train loss 0.00159
Epoch 49/90 (lr=0.0001), train loss 0.00158
Epoch 50/90 (lr=0.0001), train loss 0.00159
Epoch 51/90 (lr=0.0001), train loss 0.00152
Epoch 52/90 (lr=0.0001), train loss 0.00154
Epoch 53/90 (lr=0.0001), train loss 0.00154
Epoch 54/90 (lr=0.0001), train loss 0.00147
Epoch 55/90 (lr=0.0001), train loss 0.00165
Epoch 56/90 (lr=0.0001), train loss 0.00153
Epoch 57/90 (lr=0.0001), train loss 0.00147
Epoch 58/90 (lr=0.0001), train loss 0.00145
Epoch 59/90 (lr=0.0001), train loss 0.00149
Epoch 60/90 (lr=0.0001), train loss 0.00143
Epoch 61/90 (lr=0.0001), train loss 0.00142
Epoch 62/90 (lr=0.0001), train loss 0.00136
Epoch 63/90 (lr=0.0001), train loss 0.00139
Epoch 64/90 (lr=0.0001), train loss 0.00151
Epoch 65/90 (lr=0.0001), train loss 0.00141
Epoch 66/90 (lr=0.0001), train loss 0.00149
Epoch 67/90 (lr=0.0001), train loss 0.00134
Epoch 68/90 (lr=0.0001), train loss 0.00133
Epoch 69/90 (lr=0.0001), train loss 0.00130
Epoch 70/90 (lr=0.0001), train loss 0.00141
Epoch 71/90 (lr=0.0001), train loss 0.00198
Epoch 72/90 (lr=0.0001), train loss 0.00134
Epoch 73/90 (lr=0.0001), train loss 0.00128
Epoch 74/90 (lr=0.0001), train loss 0.00125
Epoch 75/90 (lr=0.0001), train loss 0.00123
Epoch 76/90 (lr=0.0001), train loss 0.00124
Epoch 77/90 (lr=0.0001), train loss 0.00132
Epoch 78/90 (lr=0.0001), train loss 0.00132
Epoch 79/90 (lr=0.0001), train loss 0.00127
Epoch 80/90 (lr=0.0001), train loss 0.00123
Epoch 81/90 (lr=0.0001), train loss 0.00123
Epoch 82/90 (lr=0.0001), train loss 0.00116
Epoch 83/90 (lr=0.0001), train loss 0.00121
Epoch 84/90 (lr=0.0001), train loss 0.00174
Epoch 85/90 (lr=0.0001), train loss 0.00128
Epoch 86/90 (lr=0.0001), train loss 0.00120
Epoch 87/90 (lr=0.0001), train loss 0.00116
Epoch 88/90 (lr=0.0001), train loss 0.00115
Epoch 89/90 (lr=0.0001), train loss 0.00119
Epoch 90/90 (lr=0.0001), train loss 0.00113
Loading DLC 3.0.0rc5...
DLC loaded in light mode; you cannot use any GUI (labeling, relabeling and standalone GUI)
Updated Configuration:
all_joints:
- - 0
- - 1
- - 2
- - 3
- - 4
- - 5
- - 6
- - 7
- - 8
all_joints_names:
- nose
- lefteye
- righteye
- spine1
- spine2
- spine3
- backfin
- leftfin
- rightfin
alpha_r: 0.02
apply_prob: 0.5
batch_size: 4
contrast:
  clahe: true
  claheratio: 0.1
  histeq: true
  histeqratio: 0.1
convolution:
  edge: false
  emboss:
    alpha:
    - 0.0
    - 1.0
    strength:
    - 0.5
    - 1.5
  embossratio: 0.1
  sharpen: false
  sharpenratio: 0.3
crop_sampling: hybrid
crop_size:
- 400
- 400
cropratio: 0.4
dataset: training-datasets/iteration-0/UnaugmentedDataSet_dlc_modelJul26/dlc_model_student95shuffle1.pickle
dataset_type: multi-animal-imgaug
decay_steps: 30000
display_iters: 500
engine: pytorch
epochs: 90
eval_interval: 300
global_scale: 0.8
init_weights: /home/hice1/kcozart6/.conda/envs/DEEPLABCUT/lib/python3.10/site-packages/deeplabcut
intermediate_supervision: false
intermediate_supervision_layer: 12
location_refinement: true
locref_huber_loss: true
locref_loss_weight: 0.05
locref_stdev: 7.2801
lr_init: 0.0005
max_input_size: 1500
max_shift: 0.4
maxiters: 20000
metadataset: training-datasets/iteration-0/UnaugmentedDataSet_dlc_modelJul26/Documentation_data-dlc_model_95shuffle1.pickle
min_input_size: 64
mirror: false
multi_stage: false
multi_step:
- - 0.0001
  - 7500
- - 5.0e-05
  - 12000
- - 1.0e-05
  - 200000
net_type: resnet_50
num_idchannel: 0
num_joints: 9
num_limbs: 36
optimizer: adam
pafwidth: 20
pairwise_huber_loss: false
pairwise_loss_weight: 0.1
pairwise_predict: false
partaffinityfield_graph:
- - 0
  - 1
- - 0
  - 2
- - 0
  - 3
- - 0
  - 4
- - 0
  - 5
- - 0
  - 6
- - 0
  - 7
- - 0
  - 8
- - 1
  - 2
- - 1
  - 3
- - 1
  - 4
- - 1
  - 5
- - 1
  - 6
- - 1
  - 7
- - 1
  - 8
- - 2
  - 3
- - 2
  - 4
- - 2
  - 5
- - 2
  - 6
- - 2
  - 7
- - 2
  - 8
- - 3
  - 4
- - 3
  - 5
- - 3
  - 6
- - 3
  - 7
- - 3
  - 8
- - 4
  - 5
- - 4
  - 6
- - 4
  - 7
- - 4
  - 8
- - 5
  - 6
- - 5
  - 7
- - 5
  - 8
- - 6
  - 7
- - 6
  - 8
- - 7
  - 8
partaffinityfield_predict: true
pos_dist_thresh: 17
pre_resize: []
project_path: /storage/ice1/0/3/kcozart6/dlc_model-student-2023-07-26
rotation: 25
rotratio: 0.4
save_iters: 15000
scale_jitter_lo: 0.5
scale_jitter_up: 1.25
weigh_only_present_joints: false

Utilizing the following graph: [[0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [0, 8], [1, 2], [1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [2, 3], [2, 4], [2, 5], [2, 6], [2, 7], [2, 8], [3, 4], [3, 5], [3, 6], [3, 7], [3, 8], [4, 5], [4, 6], [4, 7], [4, 8], [5, 6], [5, 7], [5, 8], [6, 7], [6, 8], [7, 8]]
Creating training data for: Shuffle: 2 TrainFraction:  0.95
  0%|          | 0/1472 [00:00<?, ?it/s]  1%|▏         | 20/1472 [00:00<00:08, 164.87it/s]  3%|▎         | 46/1472 [00:00<00:07, 198.65it/s]  5%|▍         | 67/1472 [00:00<00:07, 191.78it/s] 10%|▉         | 142/1472 [00:00<00:03, 352.47it/s] 12%|█▏        | 177/1472 [00:00<00:04, 260.55it/s] 16%|█▋        | 241/1472 [00:00<00:03, 342.26it/s] 19%|█▉        | 279/1472 [00:00<00:03, 321.17it/s] 23%|██▎       | 334/1472 [00:01<00:03, 364.87it/s] 25%|██▌       | 373/1472 [00:01<00:02, 367.14it/s] 29%|██▊       | 422/1472 [00:01<00:02, 389.79it/s] 31%|███▏      | 463/1472 [00:01<00:03, 319.09it/s] 34%|███▍      | 498/1472 [00:01<00:03, 277.35it/s] 37%|███▋      | 543/1472 [00:01<00:03, 304.11it/s] 41%|████      | 601/1472 [00:01<00:02, 331.99it/s] 47%|████▋     | 685/1472 [00:02<00:01, 449.55it/s] 50%|████▉     | 735/1472 [00:02<00:01, 406.96it/s] 53%|█████▎    | 780/1472 [00:02<00:01, 411.86it/s] 57%|█████▋    | 838/1472 [00:02<00:01, 453.89it/s] 60%|██████    | 887/1472 [00:02<00:01, 387.23it/s] 65%|██████▍   | 951/1472 [00:02<00:01, 435.16it/s] 68%|██████▊   | 998/1472 [00:02<00:01, 428.42it/s] 71%|███████   | 1044/1472 [00:02<00:01, 414.96it/s] 74%|███████▍  | 1089/1472 [00:03<00:00, 407.06it/s] 77%|███████▋  | 1131/1472 [00:03<00:00, 346.76it/s] 80%|███████▉  | 1171/1472 [00:03<00:00, 359.51it/s] 83%|████████▎ | 1217/1472 [00:03<00:00, 339.35it/s] 89%|████████▊ | 1303/1472 [00:03<00:00, 419.60it/s] 94%|█████████▍| 1382/1472 [00:03<00:00, 494.95it/s] 98%|█████████▊| 1449/1472 [00:03<00:00, 538.24it/s]100%|██████████| 1472/1472 [00:03<00:00, 382.69it/s]
The training dataset is successfully created. Use the function 'train_network' to start training. Happy training!
Traceback (most recent call last):
  File "/home/hice1/kcozart6/scratch/test_training_script.py", line 70, in <module>
    deeplabcut.evaluate_network(
  File "/home/hice1/kcozart6/.conda/envs/DEEPLABCUT/lib/python3.10/site-packages/deeplabcut/compat.py", line 476, in evaluate_network
    return evaluate_network(
TypeError: evaluate_network() got an unexpected keyword argument 'shuffle'
srun: error: atl1-1-03-012-18-0: task 0: Exited with exit code 1
---------------------------------------
Begin Slurm Epilog: Oct-17-2024 07:37:43
Job ID:        844211
Array Job ID:  _4294967294
User ID:       kcozart6
Account:       coc
Job name:      DLC_model_training
Resources:     cpu=4,gres/gpu:h100=1,mem=64G,node=1
Rsrc Used:     cput=1-04:41:20,vmem=0,walltime=07:10:20,mem=6492K,energy_used=0
Partition:     ice-gpu
Nodes:         atl1-1-03-012-18-0
---------------------------------------
